<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
 
	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.kedou">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<mvc:annotation-driven/>
		<!-- 将无法mapping到Controller的path交给default servlet handler处理 -->		
	<mvc:default-servlet-handler/>
	<!-- 处理静态资源的请求 -->

    <mvc:resources location="/static/" mapping="/static/**"/>
    
    <mvc:interceptors>  
   <!--  使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求   -->
    
    <mvc:interceptor>  
        <!-- 进行拦截：/**表示拦截所有controller -->
        <mvc:mapping path="/**" />
 		<!-- 不进行拦截 -->
         <mvc:exclude-mapping path="/**/fonts/*"/>
         <mvc:exclude-mapping path="/**/*.css"/>
         <mvc:exclude-mapping path="/**/*.js"/>
         <mvc:exclude-mapping path="/**/*.map"/>
         <mvc:exclude-mapping path="/**/*.png"/>
         <mvc:exclude-mapping path="/**/*.gif"/>
         <mvc:exclude-mapping path="/**/*.jpg"/>
         <mvc:exclude-mapping path="/**/*.jpeg"/>
          <mvc:exclude-mapping path="/**/*.json"/>
          <mvc:exclude-mapping path="/**/*bg*"/>
       
       <bean class="com.kedou.util.AddressInterceptor" />  
    </mvc:interceptor>
    <mvc:interceptor>  
        <!-- 进行拦截：/**表示拦截所有controller -->
        <mvc:mapping path="/**" />
 		<!-- 不进行拦截 -->
         <mvc:exclude-mapping path="/**/fonts/*"/>
         <mvc:exclude-mapping path="/**/*.css"/>
         <mvc:exclude-mapping path="/**/*.js"/>
          <mvc:exclude-mapping path="/**/*.map"/>
         <mvc:exclude-mapping path="/**/*.png"/>
         <mvc:exclude-mapping path="/**/*.gif"/>
         <mvc:exclude-mapping path="/**/*.jpg"/>
         <mvc:exclude-mapping path="/**/*.jpeg"/>
          <mvc:exclude-mapping path="/**/*.json"/>
          <mvc:exclude-mapping path="/**/*bg*"/>
       	  
       <bean class="com.kedou.util.LoginInterceptor" />  
    </mvc:interceptor>
     <mvc:interceptor>  
        <!-- 进行拦截：/**表示拦截所有controller -->  
 	 	<mvc:mapping path="/business/tohome" />
       <bean class="com.kedou.interceptor.VisitNumberInterceptor" /> 
    </mvc:interceptor>
    <mvc:interceptor>  
        <!-- 进行拦截：/**表示拦截所有controller -->  
 	 	<mvc:mapping path="/forum/details" />
       <bean class="com.kedou.interceptor.article.ReadNumberInterceptor" /> 
    </mvc:interceptor>
</mvc:interceptors>    

	   <!-- 开启shiro注解支持 -->
    <!--  <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>  --> 
	<!-- 定义JSP文件的位置 --> 
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
		<!-- 使用annotation定义事务 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8" />
        <property name="maxUploadSize" value="10485760000" />
        <property name="maxInMemorySize" value="40960" />
    </bean>
</beans>