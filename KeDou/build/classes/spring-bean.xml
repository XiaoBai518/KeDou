<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd">
	<description>Spring公共配置 </description>
	<!-- 配置Spring上下文的注解 -->
	<context:annotation-config />	
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.kedou">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/kedou_db?useUnicode=true&amp;characterEncoding=UTF-8" />
		<property name="username" value="kedou"/>
		<property name="password" value="kedou20180315" />  			
		<property name="idleConnectionTestPeriod" value="240" />			<!--设置测试connection的间隔时间  -->
		<property name="idleMaxAge" value="60" />						<!-- 设置connection的空闲存活时间 -->
		<property name="maxConnectionsPerPartition" value="30" />		<!-- 设置每个分区含有connection最大个数 -->
		<property name="minConnectionsPerPartition" value="10" />		<!-- 设置每个分区含有connection最小个数 -->
		<property name="partitionCount" value="3" />					<!-- 设置分区个数 -->
		<property name="acquireIncrement" value="5" />					<!-- 设置分区中的connection增长数量 -->
		<property name="statementsCacheSize" value="100"/>
		<property name="releaseHelperThreads" value="3" />				<!-- 设置connection助手线程个数。这个参数默认为3。 -->
		<property name="connectionTimeout" value="5000"></property>		<!-- 设置获取connection超时的时间 -->
	</bean>
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.kedou.entity" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.useUnicode">true</prop>
				<prop key="hibernate.connection.autocommit">true</prop>
				<prop key="hibernate.characterEncoding">utf-8</prop>
				<prop key="current_session_context_class">jta</prop>
			</props>
		</property>
	</bean>
		<!--每隔1分钟更新数据Job -->
	  <bean id="oneMinUpdateVisitNumberJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
			<property name="jobClass" value="com.kedou.Quartz.job.OneMinUptateVisitNumberJob"></property>
		<property name="jobDataMap">
			<map>
				<entry key="cacheManager"><ref bean="springcacheManager"></ref></entry>
				<entry key="sessionFactory" value-ref="sessionFactory"></entry>  
			</map>
		</property>
		<!-- 没有创建触发器 所以先设置为Ture  表明没有触发器也可以执行 -->
		  <property name="Durability" value="true"></property>
	</bean>
	<!-- 每隔1分钟执行更新数据 Trigger -->
	  <bean id="oneMinUpdateCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="oneMinUpdateVisitNumberJobDetail"/>
		<property name="cronExpression" value="0 0/1 * * * ? "></property>
	</bean>
	<!-- 每天0：00更新数据Job -->
	  <bean id="oneDayUpdateVisitNumberJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="com.kedou.Quartz.job.OneDayUptateVisitNumberJob"></property>
		<property name="jobDataMap">
			<map>
				<entry key="cacheManager"><ref bean="springcacheManager"></ref></entry>
				<entry key="visitNumberServiceImpl"><ref bean="visitNumberServiceImpl"></ref></entry>
				<entry key="sessionFactory" value-ref="sessionFactory"></entry>  
			</map>
		</property>
		<!-- 没有创建触发器 所以先设置为Ture  表明没有触发器也可以执行 -->
		  <property name="Durability" value="true"></property>
	</bean>
	<!-- 每天0：00执行更新数据 Trigger -->
	 <bean id="oneDayUpdateCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="oneDayUpdateVisitNumberJobDetail"/>
		<property name="cronExpression" value="0 0 0 1/1 * ? "></property>
	</bean>
	
	  <!--  <bean id="jobFactory" class="com.kedou.Quartz.job.MyJobFactory"></bean>-->
	<!-- SchedulerFactory -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	 	  <!--  <property name="jobFactory" ref="jobFactory"></property>-->
		<property name="jobDetails">
			<list>
				<ref bean="oneDayUpdateVisitNumberJobDetail"/>
				<ref bean="oneMinUpdateVisitNumberJobDetail"/>
			</list>
		</property>
		<property name="triggers">
			<list>
				<ref bean="oneDayUpdateCronTrigger"/>
				<ref bean="oneMinUpdateCronTrigger"/>
			</list>
		</property>
	</bean>
	<!-- <task:annotation-driven/> -->
</beans>
